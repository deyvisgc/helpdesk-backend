-- MySQL Script generated by MySQL Workbench
-- Wed Jun  5 02:58:08 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema helpdeskdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema helpdeskdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `helpdeskdb` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `helpdeskdb` ;

-- -----------------------------------------------------
-- Table `helpdeskdb`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `helpdeskdb`.`users` (
  `usuario_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(50) NOT NULL,
  `apellidos` VARCHAR(50) NOT NULL,
  `area` VARCHAR(50) NULL DEFAULT NULL,
  `rol` ENUM('SOLICITANTE', 'COORDINADOR', 'ANALISTA', 'JEFEAREA') NULL DEFAULT NULL,
  PRIMARY KEY (`usuario_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 22
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `helpdeskdb`.`requirements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `helpdeskdb`.`requirements` (
  `requerimiento_id` INT NOT NULL AUTO_INCREMENT,
  `solicitante_id` INT NULL DEFAULT NULL,
  `nombre_solicitud` VARCHAR(100) NOT NULL,
  `descripcion` TEXT NOT NULL,
  `archivo_adjunto` VARCHAR(255) NULL DEFAULT NULL,
  `fecha_creacion` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `estado` ENUM('PENDIENTE_SOLICITUD', 'ASIGNADO_ANALISTA', 'PENDIENTE_APROBACION', 'APROBADO', 'EN_PROGRESO', 'COMPLETADO', 'RECHAZADO') NULL DEFAULT NULL,
  `asignado_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`requerimiento_id`),
  INDEX `solicitante_id` (`solicitante_id` ASC) VISIBLE,
  INDEX `fk_asignado_id` (`asignado_id` ASC) VISIBLE,
  CONSTRAINT `fk_asignado_id`
    FOREIGN KEY (`asignado_id`)
    REFERENCES `helpdeskdb`.`users` (`usuario_id`),
  CONSTRAINT `requirements_ibfk_1`
    FOREIGN KEY (`solicitante_id`)
    REFERENCES `helpdeskdb`.`users` (`usuario_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `helpdeskdb`.`proposals`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `helpdeskdb`.`proposals` (
  `propuesta_id` INT NOT NULL AUTO_INCREMENT,
  `requerimiento_id` INT NULL DEFAULT NULL,
  `analista_id` INT NULL DEFAULT NULL,
  `texto_propuesta` TEXT NOT NULL,
  `estimacion_tiempo` INT NULL DEFAULT NULL,
  `numero_programadores` INT NULL DEFAULT NULL,
  `fecha_envio` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `estado` ENUM('PENDIENTE_SOLICITUD', 'ASIGNADO_ANALISTA', 'PENDIENTE_APROBACION', 'APROBADO', 'EN_PROGRESO', 'COMPLETADO', 'RECHAZADO') NULL DEFAULT NULL,
  PRIMARY KEY (`propuesta_id`),
  INDEX `requerimiento_id` (`requerimiento_id` ASC) VISIBLE,
  INDEX `analista_id` (`analista_id` ASC) VISIBLE,
  CONSTRAINT `proposals_ibfk_1`
    FOREIGN KEY (`requerimiento_id`)
    REFERENCES `helpdeskdb`.`requirements` (`requerimiento_id`),
  CONSTRAINT `proposals_ibfk_2`
    FOREIGN KEY (`analista_id`)
    REFERENCES `helpdeskdb`.`users` (`usuario_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 9
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `helpdeskdb`.`epics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `helpdeskdb`.`epics` (
  `epica_id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(255) NOT NULL,
  `propuesta_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`epica_id`),
  INDEX `propuesta_id` (`propuesta_id` ASC) VISIBLE,
  CONSTRAINT `epics_ibfk_1`
    FOREIGN KEY (`propuesta_id`)
    REFERENCES `helpdeskdb`.`proposals` (`propuesta_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 22
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `helpdeskdb`.`storiesusers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `helpdeskdb`.`storiesusers` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(255) NULL DEFAULT NULL,
  `descripcion` TEXT NULL DEFAULT NULL,
  `prioridad` ENUM('BAJA', 'MEDIA', 'ALTA') NULL DEFAULT NULL,
  `propuesta_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id` (`id` ASC) VISIBLE,
  INDEX `propuesta_id` (`propuesta_id` ASC) VISIBLE,
  CONSTRAINT `storiesusers_ibfk_1`
    FOREIGN KEY (`propuesta_id`)
    REFERENCES `helpdeskdb`.`proposals` (`propuesta_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 13
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `helpdeskdb` ;

-- -----------------------------------------------------
-- procedure sp_save_user_and_requirements
-- -----------------------------------------------------

DELIMITER $$
USE `helpdeskdb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_save_user_and_requirements`(
    IN p_nombre VARCHAR(50),
    IN p_apellidos VARCHAR(50),
    IN p_area VARCHAR(50),
    IN p_rol ENUM('SOLICITANTE', 'COORDINADOR', 'ANALISTA', 'JEFEAREA'),
	IN p_estado ENUM('PENDIENTE_SOLICITUD', 'ASIGNADO_ANALISTA',  'PENDIENTE_APROBACION', 'APROBADO', 'EN_PROGRESO', 'COMPLETADO', 'RECHAZADO'),
    IN p_nombre_solicitud VARCHAR(100),
    IN p_descripcion TEXT,
    IN p_archivo_adjunto VARCHAR(255)
)
BEGIN
    -- Insertar usuario
    INSERT INTO users (nombre, apellidos, area, rol)
    VALUES (p_nombre, p_apellidos, p_area, p_rol);

    -- Obtener el ID del usuario reci√©n insertado
    SET @usuario_id = LAST_INSERT_ID();

    -- Insertar requerimiento asociado al usuario
    INSERT INTO requirements (solicitante_id, nombre_solicitud, descripcion, archivo_adjunto, estado, fecha_creacion)
    VALUES (@usuario_id, p_nombre_solicitud, p_descripcion, p_archivo_adjunto, p_estado, NOW());

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_update_user_and_requirements
-- -----------------------------------------------------

DELIMITER $$
USE `helpdeskdb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_update_user_and_requirements`(
    IN p_usuario_id INT,
    IN p_nombre VARCHAR(50),
    IN p_apellidos VARCHAR(50),
    IN p_area VARCHAR(50),
    IN p_rol ENUM('SOLICITANTE', 'COORDINADOR', 'ANALISTA', 'JEFEAREA'),
    IN p_requerimiento_id INT,
    IN p_nombre_solicitud VARCHAR(100),
    IN p_descripcion TEXT,
    IN p_archivo_adjunto VARCHAR(255)
)
BEGIN
    -- Actualizar usuario
    UPDATE users
    SET nombre = p_nombre, apellidos = p_apellidos, area = p_area, rol = p_rol
    WHERE usuario_id = p_usuario_id;

    -- Actualizar requerimiento
    UPDATE requirements
    SET nombre_solicitud = p_nombre_solicitud, descripcion = p_descripcion, archivo_adjunto = p_archivo_adjunto
    WHERE requerimiento_id = p_requerimiento_id;

END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;